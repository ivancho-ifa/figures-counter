name: Build, test, analyze

on:
  pull_request:
    branches: [ "master" ]

jobs:
  test:
    strategy:
      matrix:
        os: [windows-latest]
        arch: [x64]
        compiler: [cl, clang-cl]
        build_type: [debug, release]
    runs-on: ${{ matrix.os }}

    env:
      # For some reason I can not use the already defined variables in env during definition of other variables
      preset: ${{matrix.compiler}}-${{matrix.arch}}-${{matrix.build_type}}
      shared_dependency_cache: ${{matrix.os}}-${{matrix.arch}}
      build_dir: ${{github.workspace}}/out/build/${{matrix.compiler}}-${{matrix.arch}}-${{matrix.build_type}}

    steps:
    - uses: actions/checkout@v3
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{matrix.arch}}
        
    - name: Cache Dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/out/build/${{env.preset}}/vcpkg_installed
        key: ${{env.shared_dependency_cache}}-${{hashFiles('**/vcpkg.json')}}
        enableCrossOsArchive: true
    
    - name: Integrate vcpkg
      run: vcpkg integrate install

    - name: Configure CMake
      run: cmake --preset ${{env.preset}}

    - name: Run MSVC Code Analysis
      if: ${{env.preset}} == cl-x64-debug
      uses: microsoft/msvc-code-analysis-action@v0.1.1
      id: run-analysis
      with:
          cmakeBuildDirectory: ${{env.build_dir}}
          buildConfiguration: Debug
          ruleset: NativeRecommendedRules.ruleset
          ignoredPaths: ${{env.build_dir}}/vcpkg_installed;${{ github.workspace }}/tests

    - name: Upload SARIF to GitHub
      if: ${{env.preset}} == cl-x64-debug
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.run-analysis.outputs.sarif }}
        
    - name: Upload SARIF as an Artifact
      if: ${{env.preset}} == cl-x64-debug
      uses: actions/upload-artifact@v2
      with:
          name: sarif-file
          path: ${{ steps.run-analysis.outputs.sarif }}

    - name: Run clang-tidy and clang-format 
      if: ${{env.preset}} == cl-x64-debug
      uses: cpp-linter/cpp-linter-action@v2
      id: linter
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        version: 15
        style: file
        database: out/build/${{env.preset}}
        thread-comments: true
        step-summary: true
        tidy-checks: ''

    - name: Build
      run: cmake --build --preset ${{env.preset}}

    - name: Test
      run: ctest --preset ${{env.preset}}
